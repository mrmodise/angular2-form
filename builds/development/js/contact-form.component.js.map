{"version":3,"sources":["contact-form.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;YAMA,sBAAsB;YAOtB;gBAAA;gBA8CA,CAAC;gBA1CA,+BAAQ,GAAR;oBACC,sDAAsD;oBACtD,IAAI,CAAC,IAAI,GAAG,IAAI,qBAAY,CAAC;wBAC5B,WAAW,EAAE,IAAI,gBAAO,CAAC,EAAE,EAAE,mBAAU,CAAC,OAAO,CAAC;4BAC/C,mBAAU,CAAC,QAAQ;4BACnB,mBAAU,CAAC,OAAO,CAAC,iBAAiB,CAAC;4BACrC,IAAI,CAAC,aAAa;yBAClB,CAAC,CAAC;wBACH,OAAO,EAAE,IAAI,gBAAO,CAAC,EAAE,CAAC;wBACxB,SAAS,EAAE,IAAI,gBAAO,CAAC,UAAU,CAAC;wBAClC,SAAS,EAAE,IAAI,gBAAO,CAAC,EAAE,EAAE,IAAI,CAAC,gBAAgB,CAAC;qBACjD,CAAC,CAAC;gBACJ,CAAC;gBAED,kDAAkD;gBAClD,oCAAa,GAAb,UAAc,OAAO;oBACpB,yCAAyC;oBACzC,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;wBAAC,MAAM,CAAC,IAAI,CAAC;oBAE5C,oCAAoC;oBACpC,IAAI,SAAS,GAAG,OAAO,CAAC,KAAK,CAAC;oBAE9B,mDAAmD;oBACnD,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;wBAAC,MAAM,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC;gBAExD,CAAC;gBAED,0DAA0D;gBAC1D,uCAAgB,GAAhB,UAAiB,OAAO;oBACvB,yCAAyC;oBACzC,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;wBAAC,MAAM,CAAC,IAAI,CAAC;oBAE5C,wCAAwC;oBACxC,IAAI,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;oBAE5B,oEAAoE;oBACpE,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC;wBAAC,MAAM,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACrD,CAAC;gBACD,+BAAQ,GAAR,UAAS,IAAI;oBACZ,iCAAiC;oBACjC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBACnB,CAAC;gBAnDF;oBAAC,gBAAS,CAAC;wBACV,QAAQ,EAAE,KAAK;wBACf,WAAW,EAAE,uCAAuC;qBACpD,CAAC;;gCAAA;gBAiDF,mBAAC;YAAD,CA9CA,AA8CC,IAAA;YA9CD,uCA8CC,CAAA","file":"contact-form.component.js","sourcesContent":["// needed for the component decorator \nimport {Component} from 'angular2/core';\n\n// needed for the form\nimport {ControlGroup, Control, Validators} from 'angular2/common';\n\n// our first component\n@Component({\n\tselector: 'app',\n\ttemplateUrl: '/partials/contact-form.component.html'\n})\n\n// to bootstrap the application\nexport class AppComponent {\n\n\tform;\n\n\tngOnInit() {\n\t\t// initialize the form with some data plus validations\n\t\tthis.form = new ControlGroup({\n\t\t\t'firstname': new Control('', Validators.compose([\n\t\t\t\tValidators.required,\n\t\t\t\tValidators.pattern('[\\\\w\\\\-\\\\s\\\\/]+'),\n\t\t\t\tthis.nameValidator\n\t\t\t])),\n\t\t\t'email': new Control(''),\n\t\t\t'subject': new Control('complain'),\n\t\t\t'message': new Control('', this.messageValidator)\n\t\t});\n\t}\n\n\t// lets add more validations to the name attribute\n\tnameValidator(control) {\n\t\t// tell validator that everything is fine\n\t\tif (control.value.trim() === 0) return null;\n\n\t\t// temporarily capture the firstname\n\t\tvar firstName = control.value;\n\n\t\t// the firstname has to have more than 6 characters\n\t\tif (firstName.length < 6) return { 'firstname': true };\n\n\t}\n\n\t// lets add more validations to the message body attribute\n\tmessageValidator(control) {\n\t\t// tell validator that everything is fine\n\t\tif (control.value.trim() === 0) return null;\n\n\t\t// temporarily save the captured message\n\t\tvar message = control.value;\n\n\t\t// the user has to enter at least 10 characters for the message body\n\t\tif (message.length < 10) return { 'message': true };\n\t}\n\tonSubmit(form) {\n\t\t// print out captured information\n\t\tconsole.log(form);\n\t}\n}"],"sourceRoot":"/source/"}